import sys

input = sys.stdin.readline

N, M = map(int, input().split())

board = [list(map(int, input().split())) for _ in range(N)]

# 항상 왼쪽 상단이 원점
tetris = [
    [(0, 0), (0, 1), (0, 2), (0, 3)],  # 길쭉 가로 - 오른쪽
    [(0, 0), (1, 0), (2, 0), (3, 0)],  # 길쭉 세로 - 아래쪽
    [(0, 0), (0, 1), (1, 1), (1, 0)],  # 사각 - 시계 방향
    [(0, 0), (1, 0), (2, 0), (2, 1)],  # ㄴ 모양 1
    [(0, 0), (1, 0), (2, 0), (2, -1)],  # ㄴ 모양 2
    [(0, 0), (1, 0), (2, 0), (0, 1)],  # ㄴ 모양 3
    [(0, 0), (1, 0), (2, 0), (0, -1)],  # ㄴ 모양 4
    [(0, 0), (0, 1), (0, 2), (1, 2)],  # ㄴ 모양 5
    [(0, 0), (0, 1), (0, 2), (-1, 2)],  # ㄴ 모양 6
    [(0, 0), (0, 1), (0, 2), (-1, 0)],  # ㄴ 모양 7
    [(0, 0), (0, 1), (0, 2), (1, 0)],  # ㄴ 모양 8
    [(0, 0), (1, 0), (1, 1), (2, 1)],  # 지그재그 1
    [(0, 1), (1, 1), (1, 0), (2, 0)],  # 지그재그 2
    [(1, 0), (1, 1), (0, 1), (0, 2)],  # 지그재그 3
    [(0, 0), (0, 1), (1, 1), (1, 2)],  # 지그재그 4
    [(0, 1), (1, 0), (1, 1), (1, 2)],  # ㅗ 1
    [(0, 0), (0, 1), (0, 2), (1, 1)],  # ㅗ 2 (ㅜ)
    [(1, 0), (0, 1), (1, 1), (2, 1)],  # ㅗ 3 (ㅓ)
    [(0, 0), (1, 0), (2, 0), (1, 1)],  # ㅗ 4 (ㅏ)
]


def check(x, y):
    for i in range(19):
        s = 0
        for j in range(4):
            dx, dy = tetris[i][j]
            nx = x + dx
            ny = y + dy
            if 0 <= nx < N and 0 <= ny < M:
                s += board[nx][ny]
            else:  # 하나라도 그래프 내에 없으면
                break
        else:  # 모든 점이 그래프 내에 있음
            global res
            res = max(s, res)


res = 0

for i in range(N):
    for j in range(M):
        check(i, j)
print(res)
